// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
	"name": "C# (.NET)",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/dotnet:1-8.0-bookworm",
	"features": {
		"ghcr.io/devcontainers/features/dotnet:2": {
			"version": "latest"
		}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"GitHub.vscode-github-actions",
				"ms-dotnettools.vscode-dotnet-runtime",
				"ms-dotnettools.csdevkit",
				"ms-dotnetools.csharp"
			]
		}
	},
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		5000,
		5001
	],
	// "portsAttributes": {
	//		"5001": {
	//			"protocol": "https"
	//		}
	// }
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "dotnet restore",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
// {
//     "name": ".NET in Codespaces",
//     "image": "mcr.microsoft.com/dotnet/sdk:8.0",
//     "features": {
//         "ghcr.io/devcontainers/features/docker-in-docker:2": {},
//         "ghcr.io/devcontainers/features/github-cli:1": {
//             "version": "2"
//         },
//         "ghcr.io/devcontainers/features/powershell:1": {
//             "version": "latest"
//         },
//         "ghcr.io/azure/azure-dev/azd:0": {
//             "version": "latest"
//         },
//         "ghcr.io/devcontainers/features/common-utils:2": {},
//         "ghcr.io/devcontainers/features/dotnet:2": {
//             "version": "none",
//             "dotnetRuntimeVersions": "7.0",
//             "aspNetCoreRuntimeVersions": "7.0"
//         }
//     },
//     "customizations": {
//         "vscode": {
//             "extensions": [
//                 "ms-vscode.vscode-node-azure-pack",
//                 "GitHub.copilot",
//                 "GitHub.vscode-github-actions",
//                 "ms-dotnettools.vscode-dotnet-runtime",
//                 "ms-dotnettools.csdevkit",
//                 "ms-dotnetools.csharp"
//             ]
//         }
//     },
//     "forwardPorts": [
//         8080,
//         8081
//     ],
//     "postCreateCommand": "cd ./SampleApp && dotnet restore",
//     "hostRequirements": {
//         "memory": "8gb",
//         "cpus": 4
//     },
//     "remoteEnv": {
//         "DOTNET_MULTILEVEL_LOOKUP": "0",
//         "TARGET": "net8.0"
//     },
//     "portsAttributes": {
//         "8080": {
//             "label": "Weather API",
//             "onAutoForward": "notify"
//         },
//         "8081": {
//             "label": "Weather Front End",
//             "onAutoForward": "notify"
//         }
//     }
// }